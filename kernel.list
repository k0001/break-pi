
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000159 	b	856c <main>

Disassembly of section .text:

00008004 <GetMailboxBase>:
    8004:	e59f0060 	ldr	r0, [pc, #96]	; 806c <wait2$+0x14>
    8008:	e1a0f00e 	mov	pc, lr

0000800c <MailboxRead>:
    800c:	e200300f 	and	r3, r0, #15
    8010:	e1a0200e 	mov	r2, lr
    8014:	ebfffffa 	bl	8004 <GetMailboxBase>
    8018:	e1a0e002 	mov	lr, r2

0000801c <rightmail$>:
    801c:	e5902018 	ldr	r2, [r0, #24]
    8020:	e3120101 	tst	r2, #1073741824	; 0x40000000
    8024:	1afffffc 	bne	801c <rightmail$>
    8028:	e5901000 	ldr	r1, [r0]
    802c:	e201200f 	and	r2, r1, #15
    8030:	e1320003 	teq	r2, r3
    8034:	1afffff8 	bne	801c <rightmail$>
    8038:	e3c1000f 	bic	r0, r1, #15
    803c:	e1a0f00e 	mov	pc, lr

00008040 <MailboxWrite>:
    8040:	e201200f 	and	r2, r1, #15
    8044:	e3c0100f 	bic	r1, r0, #15
    8048:	e1811002 	orr	r1, r1, r2
    804c:	e1a0200e 	mov	r2, lr
    8050:	ebffffeb 	bl	8004 <GetMailboxBase>
    8054:	e1a0e002 	mov	lr, r2

00008058 <wait2$>:
    8058:	e5902018 	ldr	r2, [r0, #24]
    805c:	e3120102 	tst	r2, #-2147483648	; 0x80000000
    8060:	1afffffc 	bne	8058 <wait2$>
    8064:	e5801020 	str	r1, [r0, #32]
    8068:	e1a0f00e 	mov	pc, lr
    806c:	2000b880 	.word	0x2000b880

00008070 <InitialiseFrameBuffer>:
    8070:	e3500a01 	cmp	r0, #4096	; 0x1000
    8074:	93510a01 	cmpls	r1, #4096	; 0x1000
    8078:	93520020 	cmpls	r2, #32
    807c:	83a00000 	movhi	r0, #0
    8080:	81a0f00e 	movhi	pc, lr
    8084:	e92d4010 	push	{r4, lr}
    8088:	e59f4044 	ldr	r4, [pc, #68]	; 80d4 <pointerWait$+0x14>
    808c:	e5840000 	str	r0, [r4]
    8090:	e5841004 	str	r1, [r4, #4]
    8094:	e5840008 	str	r0, [r4, #8]
    8098:	e584100c 	str	r1, [r4, #12]
    809c:	e5842014 	str	r2, [r4, #20]
    80a0:	e1a00004 	mov	r0, r4
    80a4:	e3a01001 	mov	r1, #1
    80a8:	ebffffe4 	bl	8040 <MailboxWrite>
    80ac:	e3a00001 	mov	r0, #1
    80b0:	ebffffd5 	bl	800c <MailboxRead>
    80b4:	e3300000 	teq	r0, #0
    80b8:	13a00000 	movne	r0, #0
    80bc:	18bd8010 	popne	{r4, pc}

000080c0 <pointerWait$>:
    80c0:	e5940020 	ldr	r0, [r4, #32]
    80c4:	e3300000 	teq	r0, #0
    80c8:	0afffffc 	beq	80c0 <pointerWait$>
    80cc:	e1a00004 	mov	r0, r4
    80d0:	e8bd8010 	pop	{r4, pc}
    80d4:	00009000 	.word	0x00009000

000080d8 <ReverseString>:
    80d8:	e0811000 	add	r1, r1, r0
    80dc:	e2411001 	sub	r1, r1, #1

000080e0 <revLoop$>:
    80e0:	e1510000 	cmp	r1, r0
    80e4:	91a0f00e 	movls	pc, lr
    80e8:	e5d02000 	ldrb	r2, [r0]
    80ec:	e5d13000 	ldrb	r3, [r1]
    80f0:	e5c03000 	strb	r3, [r0]
    80f4:	e5c12000 	strb	r2, [r1]
    80f8:	e2800001 	add	r0, r0, #1
    80fc:	e2411001 	sub	r1, r1, #1
    8100:	eafffff6 	b	80e0 <revLoop$>

00008104 <UnsignedString>:
    8104:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    8108:	e1a05001 	mov	r5, r1
    810c:	e1a06002 	mov	r6, r2
    8110:	e3a07000 	mov	r7, #0

00008114 <charLoop$>:
    8114:	e1a01006 	mov	r1, r6
    8118:	eb000147 	bl	863c <DivideU32>
    811c:	e3510009 	cmp	r1, #9
    8120:	92811030 	addls	r1, r1, #48	; 0x30
    8124:	82811057 	addhi	r1, r1, #87	; 0x57
    8128:	e3350000 	teq	r5, #0
    812c:	17c51007 	strbne	r1, [r5, r7]
    8130:	e2877001 	add	r7, r7, #1
    8134:	e3300000 	teq	r0, #0
    8138:	1afffff5 	bne	8114 <charLoop$>
    813c:	e3350000 	teq	r5, #0
    8140:	11a00005 	movne	r0, r5
    8144:	11a01007 	movne	r1, r7
    8148:	1bffffe2 	blne	80d8 <ReverseString>
    814c:	e1a00007 	mov	r0, r7
    8150:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00008154 <SignedString>:
    8154:	e3500000 	cmp	r0, #0
    8158:	aaffffe9 	bge	8104 <UnsignedString>
    815c:	e2600000 	rsb	r0, r0, #0
    8160:	e3310000 	teq	r1, #0
    8164:	13a0302d 	movne	r3, #45	; 0x2d
    8168:	15c13000 	strbne	r3, [r1]
    816c:	12811001 	addne	r1, r1, #1
    8170:	e92d4000 	push	{lr}
    8174:	ebffffe2 	bl	8104 <UnsignedString>
    8178:	e2800001 	add	r0, r0, #1
    817c:	e8bd8000 	pop	{pc}

00008180 <FormatString>:
    8180:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    8184:	e1a04000 	mov	r4, r0
    8188:	e1a05001 	mov	r5, r1
    818c:	e1a06002 	mov	r6, r2
    8190:	e1a07003 	mov	r7, r3
    8194:	e28d801c 	add	r8, sp, #28
    8198:	e3a09000 	mov	r9, #0

0000819c <formatLoop$>:
    819c:	e2555001 	subs	r5, r5, #1
    81a0:	b1a00009 	movlt	r0, r9
    81a4:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    81a8:	e5d40000 	ldrb	r0, [r4]
    81ac:	e2844001 	add	r4, r4, #1
    81b0:	e3300025 	teq	r0, #37	; 0x25
    81b4:	0a000004 	beq	81cc <formatArg$>

000081b8 <formatChar$>:
    81b8:	e3360000 	teq	r6, #0
    81bc:	15c60000 	strbne	r0, [r6]
    81c0:	12866001 	addne	r6, r6, #1
    81c4:	e2899001 	add	r9, r9, #1
    81c8:	eafffff3 	b	819c <formatLoop$>

000081cc <formatArg$>:
    81cc:	e2555001 	subs	r5, r5, #1
    81d0:	b1a00009 	movlt	r0, r9
    81d4:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    81d8:	e5d40000 	ldrb	r0, [r4]
    81dc:	e2844001 	add	r4, r4, #1
    81e0:	e3300025 	teq	r0, #37	; 0x25
    81e4:	0afffff3 	beq	81b8 <formatChar$>
    81e8:	e3300063 	teq	r0, #99	; 0x63
    81ec:	01a00007 	moveq	r0, r7
    81f0:	05987000 	ldreq	r7, [r8]
    81f4:	02888004 	addeq	r8, r8, #4
    81f8:	0affffee 	beq	81b8 <formatChar$>
    81fc:	e3300073 	teq	r0, #115	; 0x73
    8200:	0a000007 	beq	8224 <formatString$>
    8204:	e3300064 	teq	r0, #100	; 0x64
    8208:	0a000010 	beq	8250 <formatSigned$>
    820c:	e3300075 	teq	r0, #117	; 0x75
    8210:	13300078 	teqne	r0, #120	; 0x78
    8214:	13300062 	teqne	r0, #98	; 0x62
    8218:	1330006f 	teqne	r0, #111	; 0x6f
    821c:	0a000015 	beq	8278 <formatUnsigned$>
    8220:	eaffffdd 	b	819c <formatLoop$>

00008224 <formatString$>:
    8224:	e5d70000 	ldrb	r0, [r7]
    8228:	e3300030 	teq	r0, #48	; 0x30
    822c:	05987000 	ldreq	r7, [r8]
    8230:	02888004 	addeq	r8, r8, #4
    8234:	0affffd8 	beq	819c <formatLoop$>
    8238:	e2899001 	add	r9, r9, #1
    823c:	e3360000 	teq	r6, #0
    8240:	15c60000 	strbne	r0, [r6]
    8244:	12866001 	addne	r6, r6, #1
    8248:	e2877001 	add	r7, r7, #1
    824c:	eafffff4 	b	8224 <formatString$>

00008250 <formatSigned$>:
    8250:	e1a00007 	mov	r0, r7
    8254:	e5987000 	ldr	r7, [r8]
    8258:	e2888004 	add	r8, r8, #4
    825c:	e1a01006 	mov	r1, r6
    8260:	e3a0200a 	mov	r2, #10
    8264:	ebffffba 	bl	8154 <SignedString>
    8268:	e3360000 	teq	r6, #0
    826c:	10866000 	addne	r6, r6, r0
    8270:	e0899000 	add	r9, r9, r0
    8274:	eaffffc8 	b	819c <formatLoop$>

00008278 <formatUnsigned$>:
    8278:	e3300075 	teq	r0, #117	; 0x75
    827c:	03a0200a 	moveq	r2, #10
    8280:	e3300078 	teq	r0, #120	; 0x78
    8284:	03a02010 	moveq	r2, #16
    8288:	e3300062 	teq	r0, #98	; 0x62
    828c:	03a02002 	moveq	r2, #2
    8290:	e330006f 	teq	r0, #111	; 0x6f
    8294:	03a02008 	moveq	r2, #8
    8298:	e1a00007 	mov	r0, r7
    829c:	e5987000 	ldr	r7, [r8]
    82a0:	e2888004 	add	r8, r8, #4
    82a4:	e1a01006 	mov	r1, r6
    82a8:	ebffff95 	bl	8104 <UnsignedString>
    82ac:	e3360000 	teq	r6, #0
    82b0:	10866000 	addne	r6, r6, r0
    82b4:	e0899000 	add	r9, r9, r0
    82b8:	eaffffb7 	b	819c <formatLoop$>

000082bc <GetSystemTimerBase>:
    82bc:	e59f0034 	ldr	r0, [pc, #52]	; 82f8 <loop$+0x14>
    82c0:	e1a0f00e 	mov	pc, lr

000082c4 <GetTimeStamp>:
    82c4:	e92d4000 	push	{lr}
    82c8:	ebfffffb 	bl	82bc <GetSystemTimerBase>
    82cc:	e1c000d4 	ldrd	r0, [r0, #4]
    82d0:	e8bd8000 	pop	{pc}

000082d4 <Wait>:
    82d4:	e1a02000 	mov	r2, r0
    82d8:	e92d4000 	push	{lr}
    82dc:	ebfffff8 	bl	82c4 <GetTimeStamp>
    82e0:	e1a03000 	mov	r3, r0

000082e4 <loop$>:
    82e4:	ebfffff6 	bl	82c4 <GetTimeStamp>
    82e8:	e0401003 	sub	r1, r0, r3
    82ec:	e1510002 	cmp	r1, r2
    82f0:	9afffffb 	bls	82e4 <loop$>
    82f4:	e8bd8000 	pop	{pc}
    82f8:	20003000 	.word	0x20003000

000082fc <SetForeColour>:
    82fc:	e3500801 	cmp	r0, #65536	; 0x10000
    8300:	81a0f00e 	movhi	pc, lr
    8304:	01a0f00e 	moveq	pc, lr
    8308:	e59f11b8 	ldr	r1, [pc, #440]	; 84c8 <stringLoopEnd$+0x4>
    830c:	e1c100b0 	strh	r0, [r1]
    8310:	e1a0f00e 	mov	pc, lr

00008314 <SetGraphicsAddress>:
    8314:	e59f11b0 	ldr	r1, [pc, #432]	; 84cc <stringLoopEnd$+0x8>
    8318:	e5810000 	str	r0, [r1]
    831c:	e1a0f00e 	mov	pc, lr

00008320 <DrawPixel>:
    8320:	e59f21a4 	ldr	r2, [pc, #420]	; 84cc <stringLoopEnd$+0x8>
    8324:	e5922000 	ldr	r2, [r2]
    8328:	e5923004 	ldr	r3, [r2, #4]
    832c:	e2433001 	sub	r3, r3, #1
    8330:	e1510003 	cmp	r1, r3
    8334:	81a0f00e 	movhi	pc, lr
    8338:	e5923000 	ldr	r3, [r2]
    833c:	e2433001 	sub	r3, r3, #1
    8340:	e1500003 	cmp	r0, r3
    8344:	81a0f00e 	movhi	pc, lr
    8348:	e5922020 	ldr	r2, [r2, #32]
    834c:	e2833001 	add	r3, r3, #1
    8350:	e0200391 	mla	r0, r1, r3, r0
    8354:	e0822080 	add	r2, r2, r0, lsl #1
    8358:	e59f3168 	ldr	r3, [pc, #360]	; 84c8 <stringLoopEnd$+0x4>
    835c:	e1d330b0 	ldrh	r3, [r3]
    8360:	e1c230b0 	strh	r3, [r2]
    8364:	e1a0f00e 	mov	pc, lr

00008368 <DrawLine>:
    8368:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    836c:	e1a09000 	mov	r9, r0
    8370:	e1a0a002 	mov	sl, r2
    8374:	e1a0b001 	mov	fp, r1
    8378:	e1a0c003 	mov	ip, r3
    837c:	e159000a 	cmp	r9, sl
    8380:	c049400a 	subgt	r4, r9, sl
    8384:	c3e06000 	mvngt	r6, #0
    8388:	d04a4009 	suble	r4, sl, r9
    838c:	d3a06001 	movle	r6, #1
    8390:	e15b000c 	cmp	fp, ip
    8394:	c04c500b 	subgt	r5, ip, fp
    8398:	c3e07000 	mvngt	r7, #0
    839c:	d04b500c 	suble	r5, fp, ip
    83a0:	d3a07001 	movle	r7, #1
    83a4:	e0848005 	add	r8, r4, r5
    83a8:	e08aa006 	add	sl, sl, r6
    83ac:	e08cc007 	add	ip, ip, r7

000083b0 <pixelLoop$>:
    83b0:	e139000a 	teq	r9, sl
    83b4:	113b000c 	teqne	fp, ip
    83b8:	08bd9ff0 	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    83bc:	e1a00009 	mov	r0, r9
    83c0:	e1a0100b 	mov	r1, fp
    83c4:	ebffffd5 	bl	8320 <DrawPixel>
    83c8:	e1550088 	cmp	r5, r8, lsl #1
    83cc:	d0888005 	addle	r8, r8, r5
    83d0:	d0899006 	addle	r9, r9, r6
    83d4:	e1540088 	cmp	r4, r8, lsl #1
    83d8:	a0888004 	addge	r8, r8, r4
    83dc:	a08bb007 	addge	fp, fp, r7
    83e0:	eafffff2 	b	83b0 <pixelLoop$>

000083e4 <DrawCharacter>:
    83e4:	e350007f 	cmp	r0, #127	; 0x7f
    83e8:	83a00000 	movhi	r0, #0
    83ec:	83a01000 	movhi	r1, #0
    83f0:	81a0f00e 	movhi	pc, lr
    83f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    83f8:	e1a04001 	mov	r4, r1
    83fc:	e1a05002 	mov	r5, r2
    8400:	e59f60c8 	ldr	r6, [pc, #200]	; 84d0 <stringLoopEnd$+0xc>
    8404:	e0866200 	add	r6, r6, r0, lsl #4

00008408 <lineLoop$>:
    8408:	e5d67000 	ldrb	r7, [r6]
    840c:	e3a08008 	mov	r8, #8

00008410 <charPixelLoop$>:
    8410:	e2588001 	subs	r8, r8, #1
    8414:	ba000007 	blt	8438 <charPixelLoopEnd$>
    8418:	e1a07087 	lsl	r7, r7, #1
    841c:	e3170c01 	tst	r7, #256	; 0x100
    8420:	0afffffa 	beq	8410 <charPixelLoop$>
    8424:	e0840008 	add	r0, r4, r8
    8428:	e1a01005 	mov	r1, r5
    842c:	ebffffbb 	bl	8320 <DrawPixel>
    8430:	e3380000 	teq	r8, #0
    8434:	1afffff5 	bne	8410 <charPixelLoop$>

00008438 <charPixelLoopEnd$>:
    8438:	e2855001 	add	r5, r5, #1
    843c:	e2866001 	add	r6, r6, #1
    8440:	e316000f 	tst	r6, #15
    8444:	1affffef 	bne	8408 <lineLoop$>
    8448:	e3a00008 	mov	r0, #8
    844c:	e3a01010 	mov	r1, #16
    8450:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00008454 <DrawString>:
    8454:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    8458:	e1a07000 	mov	r7, r0
    845c:	e1a04002 	mov	r4, r2
    8460:	e1a06004 	mov	r6, r4
    8464:	e1a05003 	mov	r5, r3
    8468:	e1a08001 	mov	r8, r1

0000846c <stringLoop$>:
    846c:	e2588001 	subs	r8, r8, #1
    8470:	ba000013 	blt	84c4 <stringLoopEnd$>
    8474:	e5d79000 	ldrb	r9, [r7]
    8478:	e2877001 	add	r7, r7, #1
    847c:	e1a00009 	mov	r0, r9
    8480:	e1a01004 	mov	r1, r4
    8484:	e1a02005 	mov	r2, r5
    8488:	ebffffd5 	bl	83e4 <DrawCharacter>
    848c:	e339000a 	teq	r9, #10
    8490:	01a04006 	moveq	r4, r6
    8494:	00855001 	addeq	r5, r5, r1
    8498:	0afffff3 	beq	846c <stringLoop$>
    849c:	e3390009 	teq	r9, #9
    84a0:	10844000 	addne	r4, r4, r0
    84a4:	1afffff0 	bne	846c <stringLoop$>
    84a8:	e0800100 	add	r0, r0, r0, lsl #2
    84ac:	e1a01006 	mov	r1, r6

000084b0 <stringLoopTab$>:
    84b0:	e0811000 	add	r1, r1, r0
    84b4:	e1540001 	cmp	r4, r1
    84b8:	aafffffc 	bge	84b0 <stringLoopTab$>
    84bc:	e1a04001 	mov	r4, r1
    84c0:	eaffffe9 	b	846c <stringLoop$>

000084c4 <stringLoopEnd$>:
    84c4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
    84c8:	0000a000 	.word	0x0000a000
    84cc:	0000a004 	.word	0x0000a004
    84d0:	0000a010 	.word	0x0000a010

000084d4 <GetGpioAddress>:
    84d4:	e59f008c 	ldr	r0, [pc, #140]	; 8568 <SetGpio+0x3c>
    84d8:	e1a0f00e 	mov	pc, lr

000084dc <SetGpioFunction>:
    84dc:	e3500035 	cmp	r0, #53	; 0x35
    84e0:	93510007 	cmpls	r1, #7
    84e4:	81a0f00e 	movhi	pc, lr
    84e8:	e92d4000 	push	{lr}
    84ec:	e1a02000 	mov	r2, r0
    84f0:	ebfffff7 	bl	84d4 <GetGpioAddress>

000084f4 <functionLoop$>:
    84f4:	e3520009 	cmp	r2, #9
    84f8:	8242200a 	subhi	r2, r2, #10
    84fc:	82800004 	addhi	r0, r0, #4
    8500:	8afffffb 	bhi	84f4 <functionLoop$>
    8504:	e0822082 	add	r2, r2, r2, lsl #1
    8508:	e1a01211 	lsl	r1, r1, r2
    850c:	e3a03007 	mov	r3, #7
    8510:	e1a03213 	lsl	r3, r3, r2
    8514:	e1e03003 	mvn	r3, r3
    8518:	e5902000 	ldr	r2, [r0]
    851c:	e0022003 	and	r2, r2, r3
    8520:	e1811002 	orr	r1, r1, r2
    8524:	e5801000 	str	r1, [r0]
    8528:	e8bd8000 	pop	{pc}

0000852c <SetGpio>:
    852c:	e3500035 	cmp	r0, #53	; 0x35
    8530:	81a0f00e 	movhi	pc, lr
    8534:	e92d4000 	push	{lr}
    8538:	e1a02000 	mov	r2, r0
    853c:	ebffffe4 	bl	84d4 <GetGpioAddress>
    8540:	e1a032a2 	lsr	r3, r2, #5
    8544:	e1a03103 	lsl	r3, r3, #2
    8548:	e0800003 	add	r0, r0, r3
    854c:	e202201f 	and	r2, r2, #31
    8550:	e3a03001 	mov	r3, #1
    8554:	e1a03213 	lsl	r3, r3, r2
    8558:	e3310000 	teq	r1, #0
    855c:	05803028 	streq	r3, [r0, #40]	; 0x28
    8560:	1580301c 	strne	r3, [r0, #28]
    8564:	e8bd8000 	pop	{pc}
    8568:	20200000 	.word	0x20200000

0000856c <main>:
    856c:	e3a0d902 	mov	sp, #32768	; 0x8000
    8570:	e3a00d1e 	mov	r0, #1920	; 0x780
    8574:	e59f109c 	ldr	r1, [pc, #156]	; 8618 <loop$+0x68>
    8578:	e3a02010 	mov	r2, #16
    857c:	ebfffebb 	bl	8070 <InitialiseFrameBuffer>
    8580:	e3300000 	teq	r0, #0
    8584:	1a000006 	bne	85a4 <noError$>
    8588:	e3a00010 	mov	r0, #16
    858c:	e3a01001 	mov	r1, #1
    8590:	ebffffd1 	bl	84dc <SetGpioFunction>
    8594:	e3a00010 	mov	r0, #16
    8598:	e3a01000 	mov	r1, #0
    859c:	ebffffe2 	bl	852c <SetGpio>

000085a0 <error$>:
    85a0:	eafffffe 	b	85a0 <error$>

000085a4 <noError$>:
    85a4:	e1a04000 	mov	r4, r0
    85a8:	ebffff59 	bl	8314 <SetGraphicsAddress>
    85ac:	e3a04000 	mov	r4, #0

000085b0 <loop$>:
    85b0:	e59f0064 	ldr	r0, [pc, #100]	; 861c <loop$+0x6c>
    85b4:	e3a01015 	mov	r1, #21
    85b8:	e59f2060 	ldr	r2, [pc, #96]	; 8620 <loop$+0x70>
    85bc:	e1a03224 	lsr	r3, r4, #4
    85c0:	e92d0008 	push	{r3}
    85c4:	e92d0008 	push	{r3}
    85c8:	e92d0008 	push	{r3}
    85cc:	e92d0008 	push	{r3}
    85d0:	ebfffeea 	bl	8180 <FormatString>
    85d4:	e28dd010 	add	sp, sp, #16
    85d8:	e1a01000 	mov	r1, r0
    85dc:	e59f003c 	ldr	r0, [pc, #60]	; 8620 <loop$+0x70>
    85e0:	e3a02000 	mov	r2, #0
    85e4:	e1a03004 	mov	r3, r4
    85e8:	e3530e2f 	cmp	r3, #752	; 0x2f0
    85ec:	82433c03 	subhi	r3, r3, #768	; 0x300
    85f0:	82822c01 	addhi	r2, r2, #256	; 0x100
    85f4:	e3530e2f 	cmp	r3, #752	; 0x2f0
    85f8:	82433c03 	subhi	r3, r3, #768	; 0x300
    85fc:	82822c01 	addhi	r2, r2, #256	; 0x100
    8600:	e3530e2f 	cmp	r3, #752	; 0x2f0
    8604:	82433c03 	subhi	r3, r3, #768	; 0x300
    8608:	82822c01 	addhi	r2, r2, #256	; 0x100
    860c:	ebffff90 	bl	8454 <DrawString>
    8610:	e2844010 	add	r4, r4, #16
    8614:	eaffffe5 	b	85b0 <loop$>
    8618:	00000438 	.word	0x00000438
    861c:	0000a810 	.word	0x0000a810
    8620:	0000a825 	.word	0x0000a825

00008624 <Random>:
    8624:	e3a01cef 	mov	r1, #61184	; 0xef00
    8628:	e0010190 	mul	r1, r0, r1
    862c:	e0010190 	mul	r1, r0, r1
    8630:	e0811000 	add	r1, r1, r0
    8634:	e2810049 	add	r0, r1, #73	; 0x49
    8638:	e1a0f00e 	mov	pc, lr

0000863c <DivideU32>:
    863c:	e16f2f11 	clz	r2, r1
    8640:	e16f3f10 	clz	r3, r0
    8644:	e0522003 	subs	r2, r2, r3
    8648:	e1a03211 	lsl	r3, r1, r2
    864c:	e1a01000 	mov	r1, r0
    8650:	e3a00000 	mov	r0, #0
    8654:	ba000009 	blt	8680 <divideU32Return$>

00008658 <divideU32Loop$>:
    8658:	e1510003 	cmp	r1, r3
    865c:	ba000003 	blt	8670 <divideU32LoopContinue$>
    8660:	e2800001 	add	r0, r0, #1
    8664:	e0511003 	subs	r1, r1, r3
    8668:	01a00210 	lsleq	r0, r0, r2
    866c:	0a000003 	beq	8680 <divideU32Return$>

00008670 <divideU32LoopContinue$>:
    8670:	e2522001 	subs	r2, r2, #1
    8674:	a1a030a3 	lsrge	r3, r3, #1
    8678:	a1a00080 	lslge	r0, r0, #1
    867c:	aafffff5 	bge	8658 <divideU32Loop$>

00008680 <divideU32Return$>:
    8680:	e1a0f00e 	mov	pc, lr

00008684 <FindTag>:
    8684:	e2400001 	sub	r0, r0, #1
    8688:	e3500008 	cmp	r0, #8
    868c:	83a00000 	movhi	r0, #0
    8690:	81a0f00e 	movhi	pc, lr
    8694:	e59f1054 	ldr	r1, [pc, #84]	; 86f0 <tagLoop$+0x2c>

00008698 <tagReturn$>:
    8698:	e0812100 	add	r2, r1, r0, lsl #2
    869c:	e5922000 	ldr	r2, [r2]
    86a0:	e3320000 	teq	r2, #0
    86a4:	11a00002 	movne	r0, r2
    86a8:	11a0f00e 	movne	pc, lr
    86ac:	e5912000 	ldr	r2, [r1]
    86b0:	e3320000 	teq	r2, #0
    86b4:	13a00000 	movne	r0, #0
    86b8:	11a0f00e 	movne	pc, lr
    86bc:	e3a02c01 	mov	r2, #256	; 0x100
    86c0:	e92d0010 	push	{r4}

000086c4 <tagLoop$>:
    86c4:	e1d230b4 	ldrh	r3, [r2, #4]
    86c8:	e2533001 	subs	r3, r3, #1
    86cc:	b8bd0010 	poplt	{r4}
    86d0:	bafffff0 	blt	8698 <tagReturn$>
    86d4:	e0813103 	add	r3, r1, r3, lsl #2
    86d8:	e5934000 	ldr	r4, [r3]
    86dc:	e3340000 	teq	r4, #0
    86e0:	05832000 	streq	r2, [r3]
    86e4:	e5923000 	ldr	r3, [r2]
    86e8:	e0822103 	add	r2, r2, r3, lsl #2
    86ec:	eafffff4 	b	86c4 <tagLoop$>
    86f0:	0000a825 	.word	0x0000a825
